/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hs_stat_tracker;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
/**
 *
 * @author William
 */
public class HS_Stat_ControlPanel extends javax.swing.JPanel {

    /**
     * Creates new form HS_Stat_ControlPanel
     */
    public HS_Stat_ControlPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        freshbuttonGroup = new javax.swing.ButtonGroup();
        enemybuttonGroup = new javax.swing.ButtonGroup();
        freshDruidButton = new javax.swing.JRadioButton();
        freshHunterButton = new javax.swing.JRadioButton();
        freshMageButton = new javax.swing.JRadioButton();
        freshPaladinButton = new javax.swing.JRadioButton();
        freshPriestButton = new javax.swing.JRadioButton();
        freshRogueButton = new javax.swing.JRadioButton();
        freshShamanButton = new javax.swing.JRadioButton();
        freshWarlockButton = new javax.swing.JRadioButton();
        freshWarriorButton = new javax.swing.JRadioButton();
        enemyDruidButton = new javax.swing.JRadioButton();
        enemyHunterButton = new javax.swing.JRadioButton();
        enemyMageButton = new javax.swing.JRadioButton();
        enemyPaladinButton = new javax.swing.JRadioButton();
        enemyPriestButton = new javax.swing.JRadioButton();
        enemyRogueButton = new javax.swing.JRadioButton();
        enemyShamanButton = new javax.swing.JRadioButton();
        enemyWarlockButton = new javax.swing.JRadioButton();
        enemyWarriorButton = new javax.swing.JRadioButton();
        druidLabel = new javax.swing.JLabel();
        hunterLabel = new javax.swing.JLabel();
        lostButton = new javax.swing.JButton();
        coinCheckBox = new javax.swing.JCheckBox();
        winButton = new javax.swing.JButton();
        mageLabel = new javax.swing.JLabel();
        paladinLabel = new javax.swing.JLabel();
        priestLabel = new javax.swing.JLabel();
        rogueLabel = new javax.swing.JLabel();
        shamanLabel = new javax.swing.JLabel();
        warlockLabel = new javax.swing.JLabel();
        warriorLabel = new javax.swing.JLabel();
        totalWLLabel = new javax.swing.JLabel();
        druidOverallLabel = new javax.swing.JLabel();
        hunterOverallLabel = new javax.swing.JLabel();
        mageOverallLabel = new javax.swing.JLabel();
        paladinOverallLabel = new javax.swing.JLabel();
        priestOverallLabel = new javax.swing.JLabel();
        rogueOverallLabel = new javax.swing.JLabel();
        shamanOverallLabel = new javax.swing.JLabel();
        warlockOverallLabel = new javax.swing.JLabel();
        warriorOverallLabel = new javax.swing.JLabel();

        freshbuttonGroup.add(freshDruidButton);
        freshDruidButton.setText("Druid");
        freshDruidButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshDruidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshDruidButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshHunterButton);
        freshHunterButton.setText("Hunter");
        freshHunterButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshHunterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshHunterButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshMageButton);
        freshMageButton.setText("Mage");
        freshMageButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshMageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshMageButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshPaladinButton);
        freshPaladinButton.setText("Paladin");
        freshPaladinButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshPaladinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshPaladinButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshPriestButton);
        freshPriestButton.setText("Priest");
        freshPriestButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshPriestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshPriestButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshRogueButton);
        freshRogueButton.setText("Rogue");
        freshRogueButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshRogueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshRogueButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshShamanButton);
        freshShamanButton.setText("Shaman");
        freshShamanButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshShamanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshShamanButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshWarlockButton);
        freshWarlockButton.setText("Warlock");
        freshWarlockButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshWarlockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshWarlockButtonActionPerformed(evt);
            }
        });

        freshbuttonGroup.add(freshWarriorButton);
        freshWarriorButton.setText("Warrior");
        freshWarriorButton.setPreferredSize(new java.awt.Dimension(80, 23));
        freshWarriorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freshWarriorButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyDruidButton);
        enemyDruidButton.setText("Druid");
        enemyDruidButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyDruidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyDruidButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyHunterButton);
        enemyHunterButton.setText("Hunter");
        enemyHunterButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyHunterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyHunterButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyMageButton);
        enemyMageButton.setText("Mage");
        enemyMageButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyMageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyMageButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyPaladinButton);
        enemyPaladinButton.setText("Paladin");
        enemyPaladinButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyPaladinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyPaladinButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyPriestButton);
        enemyPriestButton.setText("Priest");
        enemyPriestButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyPriestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyPriestButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyRogueButton);
        enemyRogueButton.setText("Rogue");
        enemyRogueButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyRogueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyRogueButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyShamanButton);
        enemyShamanButton.setText("Shaman");
        enemyShamanButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyShamanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyShamanButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyWarlockButton);
        enemyWarlockButton.setText("Warlock");
        enemyWarlockButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyWarlockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyWarlockButtonActionPerformed(evt);
            }
        });

        enemybuttonGroup.add(enemyWarriorButton);
        enemyWarriorButton.setText("Warrior");
        enemyWarriorButton.setPreferredSize(new java.awt.Dimension(80, 23));
        enemyWarriorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enemyWarriorButtonActionPerformed(evt);
            }
        });

        druidLabel.setText("---");
        druidLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        hunterLabel.setText("---");
        hunterLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        lostButton.setText("Defeat");
        lostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lostButtonActionPerformed(evt);
            }
        });

        coinCheckBox.setText("Got Coin?");
        coinCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                coinCheckBoxItemStateChanged(evt);
            }
        });

        winButton.setText("Victory");
        winButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winButtonActionPerformed(evt);
            }
        });

        mageLabel.setText("---");
        mageLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        paladinLabel.setText("---");
        paladinLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        priestLabel.setText("---");
        priestLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        rogueLabel.setText("---");
        rogueLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        shamanLabel.setText("---");
        shamanLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        warlockLabel.setText("---");
        warlockLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        warriorLabel.setText("---");
        warriorLabel.setPreferredSize(new java.awt.Dimension(160, 14));

        totalWLLabel.setText("---");

        druidOverallLabel.setText("---");

        hunterOverallLabel.setText("---");

        mageOverallLabel.setText("---");

        paladinOverallLabel.setText("---");

        priestOverallLabel.setText("---");

        rogueOverallLabel.setText("---");

        shamanOverallLabel.setText("---");

        warlockOverallLabel.setText("---");

        warriorOverallLabel.setText("---");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(freshWarriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(warriorOverallLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(freshWarlockButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(warlockOverallLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyWarlockButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(freshRogueButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rogueOverallLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyRogueButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(freshPriestButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priestOverallLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyPriestButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(freshPaladinButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paladinOverallLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyPaladinButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(freshMageButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mageOverallLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyMageButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(freshHunterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hunterOverallLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyHunterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(freshDruidButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(druidOverallLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyDruidButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(freshShamanButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shamanOverallLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyShamanButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(winButton)
                                .addGap(34, 34, 34))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(totalWLLabel)
                                .addGap(19, 19, 19)))
                        .addComponent(coinCheckBox)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lostButton)
                            .addComponent(enemyWarriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(druidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hunterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paladinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rogueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 89, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shamanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(warlockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(warriorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshDruidButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyDruidButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(druidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(druidOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshHunterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyHunterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hunterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hunterOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshMageButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyMageButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mageOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshPaladinButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyPaladinButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paladinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paladinOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshPriestButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyPriestButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priestOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshRogueButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyRogueButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rogueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rogueOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshShamanButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyShamanButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shamanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shamanOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshWarlockButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyWarlockButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(warlockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(warlockOverallLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freshWarriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyWarriorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(warriorOverallLabel)
                    .addComponent(warriorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(totalWLLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lostButton)
                    .addComponent(coinCheckBox)
                    .addComponent(winButton))
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void freshDruidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshDruidButtonActionPerformed
        if(evt.getSource() == freshDruidButton){
            current = druid;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshDruidButtonActionPerformed

    private void enemyDruidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyDruidButtonActionPerformed
        if(evt.getSource() == enemyDruidButton){
            enemyHero = "Druid";
        }
    }//GEN-LAST:event_enemyDruidButtonActionPerformed

    private void enemyHunterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyHunterButtonActionPerformed
        if(evt.getSource() == enemyHunterButton){
            enemyHero = "Hunter";
        }
    }//GEN-LAST:event_enemyHunterButtonActionPerformed

    private void enemyMageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyMageButtonActionPerformed
        if(evt.getSource() == enemyMageButton){
            enemyHero = "Mage";
        }
    }//GEN-LAST:event_enemyMageButtonActionPerformed

    private void enemyPaladinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyPaladinButtonActionPerformed
        if(evt.getSource() == enemyPaladinButton){
            enemyHero = "Paladin";
        }
    }//GEN-LAST:event_enemyPaladinButtonActionPerformed

    private void enemyPriestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyPriestButtonActionPerformed
        if(evt.getSource() == enemyPriestButton){
            enemyHero = "Priest";
        }
    }//GEN-LAST:event_enemyPriestButtonActionPerformed

    private void enemyRogueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyRogueButtonActionPerformed
        if(evt.getSource() == enemyRogueButton){
            enemyHero = "Rogue";
        }
    }//GEN-LAST:event_enemyRogueButtonActionPerformed

    private void enemyShamanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyShamanButtonActionPerformed
        if(evt.getSource() == enemyShamanButton){
            enemyHero = "Shaman";
        }
    }//GEN-LAST:event_enemyShamanButtonActionPerformed

    private void enemyWarlockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyWarlockButtonActionPerformed
        if(evt.getSource() == enemyWarlockButton){
            enemyHero = "Warlock";
        }
    }//GEN-LAST:event_enemyWarlockButtonActionPerformed

    private void enemyWarriorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enemyWarriorButtonActionPerformed
        if(evt.getSource() == enemyWarriorButton){
            enemyHero = "Warrior";
        }
    }//GEN-LAST:event_enemyWarriorButtonActionPerformed

    private void coinCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_coinCheckBoxItemStateChanged
        if(coinCheckBox.isSelected()){
            coin = true;
            coinText = "second";
        }else{
            coin = false;
            coinText = "first";
        }
        
    }//GEN-LAST:event_coinCheckBoxItemStateChanged

    private void winButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winButtonActionPerformed
        if(evt.getSource() == winButton){
            wins++;
            totalWLLabel.setText('('+Integer.toString(wins)+','+Integer.toString(losses)+')');
            current.setGameResults(enemyHero, coin, true);
            updateAllLabels();
            try{
                FileWriter writer = new FileWriter(csv_file_name, true);
                writer.append(current.getHeroName());
		writer.append(',');
		writer.append(enemyHero);
		writer.append(',');
		writer.append("win");
		writer.append(',');
		writer.append(coinText);
                writer.append(',');
		writer.append('1');
		writer.append('\n');
                writer.flush();
		writer.close();
            }catch(IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_winButtonActionPerformed

    private void freshHunterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshHunterButtonActionPerformed
        if(evt.getSource() == freshHunterButton){
            current = hunter;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshHunterButtonActionPerformed

    private void freshMageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshMageButtonActionPerformed
        if(evt.getSource() == freshMageButton){
            current = mage;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshMageButtonActionPerformed

    private void freshPaladinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshPaladinButtonActionPerformed
        if(evt.getSource() == freshPaladinButton){
            current = paladin;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshPaladinButtonActionPerformed

    private void freshPriestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshPriestButtonActionPerformed
        if(evt.getSource() == freshPriestButton){
            current = priest;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshPriestButtonActionPerformed

    private void freshRogueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshRogueButtonActionPerformed
        if(evt.getSource() == freshRogueButton){
            current = rogue;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshRogueButtonActionPerformed

    private void freshShamanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshShamanButtonActionPerformed
        if(evt.getSource() == freshShamanButton){
            current = shaman;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshShamanButtonActionPerformed

    private void freshWarlockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshWarlockButtonActionPerformed
        if(evt.getSource() == freshWarlockButton){
            current = warlock;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshWarlockButtonActionPerformed

    private void freshWarriorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freshWarriorButtonActionPerformed
        if(evt.getSource() == freshWarriorButton){
            current = warrior;
            current.setAllGameResultsStrings();
            updateAllLabels();
        }
    }//GEN-LAST:event_freshWarriorButtonActionPerformed

    private void lostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lostButtonActionPerformed
        if(evt.getSource() == lostButton){
            losses++;
            totalWLLabel.setText('('+Integer.toString(wins)+','+Integer.toString(losses)+')');
            current.setGameResults(enemyHero, coin, false);
            updateAllLabels();
            try{
                FileWriter writer = new FileWriter(csv_file_name, true);
                writer.append(current.getHeroName());
		writer.append(',');
		writer.append(enemyHero);
		writer.append(',');
		writer.append("lose");
		writer.append(',');
		writer.append(coinText);
                writer.append(',');
		writer.append('0');
		writer.append('\n');
                writer.flush();
		writer.close();
            }catch(IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_lostButtonActionPerformed

    private void updateAllLabels(){
        druidLabel.setText(current.getDruidResults());
        druidOverallLabel.setText(druid.getMyResults());
        hunterLabel.setText(current.getHunterResults());
        hunterOverallLabel.setText(hunter.getMyResults());
        mageLabel.setText(current.getMageResults());
        mageOverallLabel.setText(mage.getMyResults());
        
        paladinLabel.setText(current.getPaladinResults());
        paladinOverallLabel.setText(paladin.getMyResults());
        priestLabel.setText(current.getPriestResults());
        priestOverallLabel.setText(priest.getMyResults());
        rogueLabel.setText(current.getRogueResults());
        rogueOverallLabel.setText(rogue.getMyResults());
        
        shamanLabel.setText(current.getShamanResults());
        shamanOverallLabel.setText(shaman.getMyResults());
        warlockLabel.setText(current.getWarlockResults());
        warlockOverallLabel.setText(warlock.getMyResults());
        warriorLabel.setText(current.getWarriorResults());
        warriorOverallLabel.setText(warrior.getMyResults());
    }
    
    /*private void updateOneLabel(String opponent){
        switch(opponent){
            case "Druid": druidLabel.setText(current.getDruidResults()); break;
            case "Hunter": hunterLabel.setText(current.getHunterResults()); break;
            case "Mage": mageLabel.setText(current.getMageResults()); break;
            case "Paladin": paladinLabel.setText(current.getPaladinResults()); break;
            case "Priest": priestLabel.setText(current.getPriestResults()); break;
            case "Rogue": rogueLabel.setText(current.getRogueResults()); break;
            case "Shaman": shamanLabel.setText(current.getShamanResults()); break;
            case "Warlock": warlockLabel.setText(current.getWarlockResults()); break;
            case "Warrior": warriorLabel.setText(current.getWarriorResults()); break;
            default: System.out.println("no heroes detected.");
        }
    }*/
    
    DateFormat dateFormat = new SimpleDateFormat("MMddEEE");
    Date date = new Date();
    
    private final String csv_file_name = System.getProperty("user.home") + "\\Desktop\\hs_results\\"+dateFormat.format(date)+".csv";
            //"C:\\Users\\William\\Desktop\\"+dateFormat.format(date)+".csv";
            //"c:\\users\\%username%\\desktop\\hs_results\\"+dateFormat.format(date)+".csv";
    private String enemyHero;
    private String coinText;
    private boolean coin;
    private int wins = 0;
    private int losses = 0;
    private Hero current;
    private final Hero druid = new Hero("Druid");
    private final Hero hunter = new Hero("Hunter");
    private final Hero mage = new Hero("Mage");
    private final Hero paladin = new Hero("Paladin");
    private final Hero priest = new Hero("Priest");
    private final Hero rogue = new Hero("Rogue");
    private final Hero shaman = new Hero("Shaman");
    private final Hero warlock = new Hero("Warlock");
    private final Hero warrior = new Hero("Warrior");

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox coinCheckBox;
    private javax.swing.JLabel druidLabel;
    private javax.swing.JLabel druidOverallLabel;
    private javax.swing.JRadioButton enemyDruidButton;
    private javax.swing.JRadioButton enemyHunterButton;
    private javax.swing.JRadioButton enemyMageButton;
    private javax.swing.JRadioButton enemyPaladinButton;
    private javax.swing.JRadioButton enemyPriestButton;
    private javax.swing.JRadioButton enemyRogueButton;
    private javax.swing.JRadioButton enemyShamanButton;
    private javax.swing.JRadioButton enemyWarlockButton;
    private javax.swing.JRadioButton enemyWarriorButton;
    private javax.swing.ButtonGroup enemybuttonGroup;
    private javax.swing.JRadioButton freshDruidButton;
    private javax.swing.JRadioButton freshHunterButton;
    private javax.swing.JRadioButton freshMageButton;
    private javax.swing.JRadioButton freshPaladinButton;
    private javax.swing.JRadioButton freshPriestButton;
    private javax.swing.JRadioButton freshRogueButton;
    private javax.swing.JRadioButton freshShamanButton;
    private javax.swing.JRadioButton freshWarlockButton;
    private javax.swing.JRadioButton freshWarriorButton;
    private javax.swing.ButtonGroup freshbuttonGroup;
    private javax.swing.JLabel hunterLabel;
    private javax.swing.JLabel hunterOverallLabel;
    private javax.swing.JButton lostButton;
    private javax.swing.JLabel mageLabel;
    private javax.swing.JLabel mageOverallLabel;
    private javax.swing.JLabel paladinLabel;
    private javax.swing.JLabel paladinOverallLabel;
    private javax.swing.JLabel priestLabel;
    private javax.swing.JLabel priestOverallLabel;
    private javax.swing.JLabel rogueLabel;
    private javax.swing.JLabel rogueOverallLabel;
    private javax.swing.JLabel shamanLabel;
    private javax.swing.JLabel shamanOverallLabel;
    private javax.swing.JLabel totalWLLabel;
    private javax.swing.JLabel warlockLabel;
    private javax.swing.JLabel warlockOverallLabel;
    private javax.swing.JLabel warriorLabel;
    private javax.swing.JLabel warriorOverallLabel;
    private javax.swing.JButton winButton;
    // End of variables declaration//GEN-END:variables
}
